-- MySQL Script generated by MySQL Workbench
-- 07/01/15 21:15:00
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ingenia
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ingenia` ;

-- -----------------------------------------------------
-- Schema ingenia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ingenia` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `ingenia` ;

-- -----------------------------------------------------
-- Table `ingenia`.`curso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`curso` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`curso` (
  `idcurso` INT NOT NULL,
  `nombre` VARCHAR(65) NOT NULL,
  `descripcion` VARCHAR(300) NULL,
  `activo` TINYINT(1) NULL,
  `estado` VARCHAR(5) NULL,
  PRIMARY KEY (`idcurso`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`usuario` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`usuario` (
  `idusuario` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `apellido` VARCHAR(45) NULL,
  `genero` VARCHAR(45) NULL,
  `correo` VARCHAR(45) NULL,
  `fecha_creacion` DATETIME NULL DEFAULT now(),
  `fecha_ultimo_ingreso` DATETIME NOT NULL DEFAULT now(),
  `clave` VARCHAR(45) NULL,
  `alias` VARCHAR(45) NULL,
  PRIMARY KEY (`idusuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`curso_estudiante`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`curso_estudiante` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`curso_estudiante` (
  `idcurso` INT NOT NULL,
  `idusuario` INT NOT NULL,
  `puntaje` INT NULL COMMENT 'puntaje obtenido por un jugador en un curso.',
  PRIMARY KEY (`idcurso`, `idusuario`),
  INDEX `fk_curso_estudiante_usuario1_idx` (`idusuario` ASC),
  CONSTRAINT `fk_curso_estudiante_curso`
    FOREIGN KEY (`idcurso`)
    REFERENCES `ingenia`.`curso` (`idcurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_curso_estudiante_usuario1`
    FOREIGN KEY (`idusuario`)
    REFERENCES `ingenia`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`tipo_actividad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`tipo_actividad` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`tipo_actividad` (
  `idtipo_actividad` INT NOT NULL,
  `nombre` VARCHAR(65) NULL,
  PRIMARY KEY (`idtipo_actividad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`actividad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`actividad` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`actividad` (
  `idactividad` INT NOT NULL,
  `idtipo_actividad` INT NOT NULL,
  `activo` TINYINT(1) NULL COMMENT 'estado activo o inactivo',
  `publicado` TINYINT(1) NULL,
  `idactividad_autocompletar` INT NOT NULL,
  `enunciado` VARCHAR(45) NULL,
  PRIMARY KEY (`idactividad`),
  INDEX `fk_actividad_tipo_actividad1_idx` (`idtipo_actividad` ASC),
  CONSTRAINT `fk_actividad_tipo_actividad1`
    FOREIGN KEY (`idtipo_actividad`)
    REFERENCES `ingenia`.`tipo_actividad` (`idtipo_actividad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`curso_actividad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`curso_actividad` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`curso_actividad` (
  `idcurso` INT NOT NULL,
  `posicion` INT NULL COMMENT 'posicion dentro de la secuencia de actividades que deben aparecer en un curso.\n',
  PRIMARY KEY (`idcurso`),
  CONSTRAINT `fk_curso_actividad_curso1`
    FOREIGN KEY (`idcurso`)
    REFERENCES `ingenia`.`curso` (`idcurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`mensaje`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`mensaje` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`mensaje` (
  `idmensaje` INT NOT NULL,
  `idusuario_origen` INT NOT NULL,
  `idusuario_destino` INT NOT NULL,
  PRIMARY KEY (`idmensaje`),
  INDEX `fk_mensaje_usuario1_idx` (`idusuario_origen` ASC),
  INDEX `fk_mensaje_usuario2_idx` (`idusuario_destino` ASC),
  CONSTRAINT `fk_mensaje_usuario1`
    FOREIGN KEY (`idusuario_origen`)
    REFERENCES `ingenia`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mensaje_usuario2`
    FOREIGN KEY (`idusuario_destino`)
    REFERENCES `ingenia`.`usuario` (`idusuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`Pregunta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`Pregunta` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`Pregunta` (
  `idPregunta` INT NOT NULL,
  `idActividad` INT NOT NULL,
  `Enunciado` VARCHAR(255) NULL,
  PRIMARY KEY (`idPregunta`),
  UNIQUE INDEX `idPregunta_UNIQUE` (`idPregunta` ASC),
  INDEX `fk_Pregunta_actividad1_idx` (`idActividad` ASC),
  CONSTRAINT `fk_Pregunta_actividad1`
    FOREIGN KEY (`idActividad`)
    REFERENCES `ingenia`.`actividad` (`idactividad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`respuesta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`respuesta` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`respuesta` (
  `idrespuesta` INT NOT NULL,
  `idpregunta` INT NOT NULL,
  `valor` VARCHAR(45) NULL COMMENT 'opcion de respuesta, algunas no seran verdaderas. Corresponde a las opciones que el usuario tiene para seleccionar la respuesta correcta.',
  `verdadero` TINYINT(1) NULL COMMENT 'identifica si esta es la respuesta correcta',
  `orden` INT NULL,
  PRIMARY KEY (`idrespuesta`),
  INDEX `fk_respuesta_Pregunta1_idx` (`idpregunta` ASC),
  CONSTRAINT `fk_respuesta_Pregunta1`
    FOREIGN KEY (`idpregunta`)
    REFERENCES `ingenia`.`Pregunta` (`idPregunta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`registro_actividad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`registro_actividad` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`registro_actividad` (
  `idregistro_actividad` INT NOT NULL,
  `actividad_idactividad` INT NOT NULL,
  `curso_actividad_idcurso` INT NOT NULL,
  `intento` VARCHAR(45) NULL,
  PRIMARY KEY (`idregistro_actividad`),
  INDEX `fk_registro_actividad_actividad1_idx` (`actividad_idactividad` ASC),
  INDEX `fk_registro_actividad_curso_actividad1_idx` (`curso_actividad_idcurso` ASC),
  CONSTRAINT `fk_registro_actividad_actividad1`
    FOREIGN KEY (`actividad_idactividad`)
    REFERENCES `ingenia`.`actividad` (`idactividad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_registro_actividad_curso_actividad1`
    FOREIGN KEY (`curso_actividad_idcurso`)
    REFERENCES `ingenia`.`curso_actividad` (`idcurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`tipo_gato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`tipo_gato` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`tipo_gato` (
  `idtipo_gato` INT NOT NULL,
  PRIMARY KEY (`idtipo_gato`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`color`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`color` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`color` (
  `idcolor` INT NOT NULL,
  PRIMARY KEY (`idcolor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`arma`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`arma` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`arma` (
  `idarma` INT NOT NULL,
  PRIMARY KEY (`idarma`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`gato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`gato` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`gato` (
  `idgato` INT NOT NULL,
  `tipo_gato_idtipo_gato` INT NOT NULL,
  `color` VARCHAR(45) NULL,
  `orden` VARCHAR(45) NULL,
  `defensa` VARCHAR(45) NULL,
  `color_idcolor` INT NOT NULL,
  `arma_idarma` INT NOT NULL,
  PRIMARY KEY (`idgato`),
  INDEX `fk_gato_tipo_gato1_idx` (`tipo_gato_idtipo_gato` ASC),
  INDEX `fk_gato_color1_idx` (`color_idcolor` ASC),
  INDEX `fk_gato_arma1_idx` (`arma_idarma` ASC),
  CONSTRAINT `fk_gato_tipo_gato1`
    FOREIGN KEY (`tipo_gato_idtipo_gato`)
    REFERENCES `ingenia`.`tipo_gato` (`idtipo_gato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_gato_color1`
    FOREIGN KEY (`color_idcolor`)
    REFERENCES `ingenia`.`color` (`idcolor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_gato_arma1`
    FOREIGN KEY (`arma_idarma`)
    REFERENCES `ingenia`.`arma` (`idarma`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`estructura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`estructura` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`estructura` (
  `idestructura` INT NOT NULL,
  `ContenidoAyuda` VARCHAR(512) NULL,
  PRIMARY KEY (`idestructura`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`NivelJuego`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`NivelJuego` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`NivelJuego` (
  `idNivel` INT NOT NULL,
  `idActividad` INT NULL,
  `MaximoMovimientos` INT NULL,
  PRIMARY KEY (`idNivel`),
  UNIQUE INDEX `idNivel_UNIQUE` (`idNivel` ASC),
  INDEX `fk_Nivel_actividad1_idx` (`idActividad` ASC),
  CONSTRAINT `fk_Nivel_actividad1`
    FOREIGN KEY (`idActividad`)
    REFERENCES `ingenia`.`actividad` (`idactividad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`NivelJuego_estructura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`NivelJuego_estructura` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`NivelJuego_estructura` (
  `idestructura` INT NOT NULL,
  `idNivel` INT NOT NULL,
  INDEX `fk_actividadjuego_estructura_estructura1_idx` (`idestructura` ASC),
  INDEX `fk_NivelJuego_estructura_Nivel1_idx` (`idNivel` ASC),
  CONSTRAINT `fk_actividadjuego_estructura_estructura1`
    FOREIGN KEY (`idestructura`)
    REFERENCES `ingenia`.`estructura` (`idestructura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_NivelJuego_estructura_Nivel1`
    FOREIGN KEY (`idNivel`)
    REFERENCES `ingenia`.`NivelJuego` (`idNivel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`Nivel_Enemigo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`Nivel_Enemigo` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`Nivel_Enemigo` (
  `idNivel` INT NOT NULL,
  `idEnemigo` INT NOT NULL,
  `Orden` INT NULL,
  PRIMARY KEY (`idNivel`, `idEnemigo`),
  INDEX `fk_Nivel_Enemigo_gato1_idx` (`idEnemigo` ASC),
  CONSTRAINT `fk_Nivel_Enemigo_Nivel1`
    FOREIGN KEY (`idNivel`)
    REFERENCES `ingenia`.`NivelJuego` (`idNivel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Nivel_Enemigo_gato1`
    FOREIGN KEY (`idEnemigo`)
    REFERENCES `ingenia`.`gato` (`idgato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`movimientos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`movimientos` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`movimientos` (
  `idmovimientos` INT NOT NULL,
  `Nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`idmovimientos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`Nivel_movimientos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`Nivel_movimientos` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`Nivel_movimientos` (
  `idNivel` INT NOT NULL,
  `idmovimiento` INT NOT NULL,
  PRIMARY KEY (`idNivel`, `idmovimiento`),
  INDEX `fk_Nivel_movimientos_movimientos1_idx` (`idmovimiento` ASC),
  CONSTRAINT `fk_Nivel_movimientos_movimientos1`
    FOREIGN KEY (`idmovimiento`)
    REFERENCES `ingenia`.`movimientos` (`idmovimientos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Nivel_movimientos_Nivel1`
    FOREIGN KEY (`idNivel`)
    REFERENCES `ingenia`.`NivelJuego` (`idNivel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ingenia`.`Avance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ingenia`.`Avance` ;

CREATE TABLE IF NOT EXISTS `ingenia`.`Avance` (
  `idAvance` INT NOT NULL,
  `idActividad` INT NULL,
  `idEstudiante` INT NULL,
  `Fecha` DATE NULL,
  `Puntos` INT NULL,
  PRIMARY KEY (`idAvance`),
  INDEX `fk_Avance_actividad1_idx` (`idActividad` ASC),
  CONSTRAINT `fk_Avance_actividad1`
    FOREIGN KEY (`idActividad`)
    REFERENCES `ingenia`.`actividad` (`idactividad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
